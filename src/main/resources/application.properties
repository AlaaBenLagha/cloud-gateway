spring.application.name=GATEWAY-SERVICE

#optional
spring.cloud.gateway.discovery.locator.enabled=true

#LowerCaseDetection
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

#Eureka Detection (random port)
eureka.instance.instance-id=${spring.application.name}:${random.uuid}


#IDK
spring.cloud.loadbalancer.ribbon.enabled=false

#Spring Security conf

#expose the openId Configuration of our realm on keycloak  (Keycloak Dashboaed -> RealmSettings -> endpoints -> OpenId)
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/auth/realms/pfe-project-realm

#CheckService Configuration
spring.cloud.gateway.routes[0].id=check-service
spring.cloud.gateway.routes[0].uri=lb://CHECK-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/check/**
#spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
#spring.cloud.gateway.routes[0].filters[0].args.name=check-service
#spring.cloud.gateway.routes[0].filters[0].args.fallbackuri=forward:/checkFallBack

#ProcessingService Configuration
spring.cloud.gateway.routes[1].id=processing-service
spring.cloud.gateway.routes[1].uri=lb://PROCESSING-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/process/**
#spring.cloud.gateway.routes[1].filters[0].name=CircuitBreaker
#spring.cloud.gateway.routes[1].filters[0].args.name=processing-service
#spring.cloud.gateway.routes[1].filters[0].args.fallbackuri=forward:/processingFallBack

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.hostname=localhost



#management.endpoints.web.exposure.include=hystrix.stream
#hystrix.command.fallbackcmd.execution.isolation.thread.timeoutInMilliseconds=5000

